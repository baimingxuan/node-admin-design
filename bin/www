#!/usr/bin/env node
import http from 'node:http'
import app from '../src/app.js'
import config from '../src/config/index.js'

// 获取端口
const port = normalizePort(config.port || '3000')

// 创建HTTP服务器
const server = http.createServer(app.callback())

// 监听端口
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

// 规范化端口
function normalizePort(val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

// 错误处理
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // 特定错误消息的友好处理
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

// 监听回调
function onListening() {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  console.log('Listening on ' + bind)
}
